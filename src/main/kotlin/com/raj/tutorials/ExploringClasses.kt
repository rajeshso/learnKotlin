package com.raj.tutorials

//Accessible only in this package
private class PrivateCustomer {

}
//By default public
//Constructor - the traditional way
/*class Customer {
 val name: String
 val address:String
 val age:Int

    constructor(name: String, address: String, age: Int) {
        this.name = name
        this.address = address
        this.age = age
    }
}*/
//constructor - the kotlin way
class Customer (val name: String,
                val address:String,
                var age:Int) {

    //secondary constructor - all params by default are val. important to chain the primary constructor
    //constructor(name: String, age: Int) : this(name, "", age)
    constructor(name: String, age: Int) : this(name, "", age) {
        println("I am secondary constructor")
    }

    init {
        println("I am init block")
    }

}
class AnotherCustomer (val name: String,
                       var age:Int) {
    var address: String
    //overriding the getters and setters
    var approved: Boolean = false
    set(value) {
        if (age > 21) {
            field = value //Note the field keyword has to be used.
        }else {
            println("You can't approve a minor")
        }
    }
    var reviewed: Boolean =false
    set(value) {
        field = value
    }
    get() = !field

    //secondary constructor - all params by default are val. important to chain the primary constructor
    //constructor(name: String, age: Int) : this(name, "", age)
    constructor(name: String, address:String, age: Int) : this(name,  age) {
        println("I am secondary constructor")
        this.address = address
    }

    init {
        println("I am init block")
        address = ""
    }

    override fun toString(): String = "$name $address $age"

    //static factory
    companion object {
        fun getInstance() =  AnotherCustomer("Ashok", "WMS", 24 )
    }
}

//Convert the following java class to kotlin
/*class Book {
    private Long id;
    private String title;

    Book(Long id, String title) {
        this.id = id;
        this.title = title;
    }
    public Long getId() {
        returm id;
    }
    public String getTitle() {
        return title;
    }
}*/
class Book(val id:Long, val title:String)

//equals, hashcode, tostring are autogenerated, destructuring
data class GoodCustomer(val name: String,
                        val address:String,
                        var age:Int)

fun main(args: Array<String>) {
    val customer = Customer("Raj","Belvedere Road", 21)
    customer.age = 22
    println("${customer.name} is ${customer.age} years old")
    val customer2 = Customer("Karthik",20)
    println("${customer2.name} is ${customer2.age} years old")
    val customer3 = AnotherCustomer("Swami",23)
    val customer4 = AnotherCustomer("Swami","NGEF", 23)
    val customer5 = AnotherCustomer.getInstance()
    println(customer5)
    val customer6 = GoodCustomer("Sally","Dublin", 29)
    val customer7 = customer6.copy(name="Sally Jr")
    println(customer6)
    println(customer7)
    val (name, address, age) = customer7
    println("$name $address $age")
}